package BombSweeper;

public class BombSweeper {
	/**
	Problem statement
	https://community.topcoder.com/stat?c=problem_statement&pm=1778
	 
	* @author Z.SUN
	* @version 2018年8月16日 上午11:45:08
	*/
	public double winPercentage(String[] board) {
		int offsetX[] = { 0, -1, -1, 0, 1, 1, 1, 0, -1 };
		int offsetY[] = { 0, 0, 1, 1, 1, 0, -1, -1, -1 };
		int row = board.length;
		int column = board[0].length();
		int loss = 0;
		boolean bombImpacts[][] = new boolean[row][column];
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < column; j++) {
				if (board[i].charAt(j) == 'B') {
					loss++;
					for (int k = 0; k < offsetX.length; k++) {
						int nextX = i + offsetX[k];
						int nextY = j + offsetY[k];
						if (nextX >= 0 && nextX < row && nextY >= 0
								&& nextY < column) {
							bombImpacts[nextX][nextY] = true;
						}
					}
				}
			}
		}
		int win = 0;
		for (int i = 0; i < row; i++) {
			for (int j = 0; j < column; j++) {
				if (!bombImpacts[i][j]) {
					win++;
				}
			}
		}
		return win * 100.0 / (win + loss);
	}
	
	public static void main(String args[]){
	
		String[] board = 	
			{"......B.......B..B...........................B....",
					 "..............B..................BB..B............",
					 "B.B.B.............B.....B..............B..........",
					 "...................B...B....................BB....",
					 "...B.....B.........................B.......B.....B",
					 "B.B.........B.....B.......B..B......B.B...B.BB....",
					 "..B...................BB...............B..........",
					 ".........B...B................B..B................",
					 ".......BB.......B....B................B.....BBB...",
					 ".......BB..........B..............B......BB.......",
					 "...................BB.....................B.......",
					 "...B.B.B......B..............B...B......B.........",
					 "B................B................................",
					 "....B..........B.....B..BB....B...............BB..",
					 "..B....B.....B.............B.....B............B...",
					 "...................B.B........B..B.........B.B....",
					 ".....B.....B......................................",
					 "...........BB......BB...B.B........B...B..........",
					 ".....BBB..........................................",
					 ".B...........B....B...BB......B......B...B.B......",
					 "..................B........BB................B....",
					 "...............................B..B....BBB.B....B.",
					 "..........B.......................................",
					 ".....B..........B....BB......B.B......B......B....",
					 ".....B..................B........B................",
					 "............B.....B..B....BB...B....BB........B...",
					 "..B.................B.........B...................",
					 ".BB..............B................................",
					 "...B....B..................B.................B....",
					 "......B...B......B......................B.B.......",
					 "..............B..................B.......B........",
					 ".....B........BB...B.....B........................",
					 ".......B......B.B..B..........B...........B....B..",
					 "B...B...........B...B...B......B.B...B..B......B..",
					 "....B..B.....B.B.......BB..B............B.B....B..",
					 "B.......B..........B.........B...B.BB......B......",
					 "....B...............................B.............",
					 ".....B.B..........................................",
					 "..........B............B......B.B..B....B.........",
					 "....B...B.......................B.................",
					 "B.................B...........B..B....B...........",
					 "...B.....B........................................",
					 "...B..B......................................BBB..",
					 ".B...B....................................B....B..",
					 "...B...B..........B...B.B.........................",
					 ".....B.............B...BB..........B..BBB.BB......",
					 "....................B.....B.......................",
					 "........B..BB..........B.B....B...........B......B",
					 ".........B.....BB..B.............B....BB..........",
					 "....B..B..............B...B..B..........B........."};
		System.out.println(new BombSweeper().winPercentage(board));
	}

}
